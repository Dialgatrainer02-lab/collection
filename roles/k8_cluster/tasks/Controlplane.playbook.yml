---
- name: Cluster initalisation
  when: inventory_hostname == groups['controlplane'][0]
  block:
    - name: Init kubeadm
      ansible.builtin.command:
        cmd: >
          sudo kubeadm init
          --pod-network-cidr={{ k8_cluster_pod_network_cidr }}
          {{ '--service-cidr=%s' | format(k8_cluster_service_network_cidr)  | default(omit) }}
          --control-plane-endpoint={{ k8_cluster_controlplane_endpoint | default(inventory_hostname ~ ':6443') }}
          --upload-certs
        creates: /etc/kubernetes/admin.conf
      run_once: true


    - name: Create ~/.kube directory
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        mode: "0755"

    - name: Copy kubeconfig file
      ansible.builtin.file:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0755"
        state: hard

    - name: Cni specific steps
      ansible.builtin.include_tasks:
        file: cni/{{ k8_cluster_cni }}.yml

    - name: Copy kubeconfig to host
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ k8_cluster_kubeconfig_path }}"
        flat: true
      run_once: true

    - name: Get new certificate key
      ansible.builtin.command:
        cmd: sudo kubeadm init phase upload-certs --upload-certs
      register: k8_cluster_certificate_key
      changed_when: k8_cluster_certificate_key.rc != 0

    - name: Generate token to join controlplane nodes to cluster
      ansible.builtin.command:
        cmd: sudo kubeadm token create --print-join-command
      register: k8_cluster_join_node_token
      changed_when: k8_cluster_join_node_token.rc != 0

    - name: Save join token command as variable
      ansible.builtin.set_fact:
        k8_cluster_join_node: "{{ k8_cluster_join_node_token.stdout_lines[0] }}"

    - name: Save certificate key as variable
      ansible.builtin.set_fact:
        k8_cluster_certificate: "{{ k8_cluster_certificate_key.stdout_lines[2] }}"

- name: Controlplane high avalbility
  when: not (inventory_hostname == groups['controlplane'][0])
  block:
    - name: Add controlplane nodes to cluster
      ansible.builtin.command:
        cmd: >-
          sudo {{ "%s --control-plane --certificate-key %s" | format(
            hostvars[groups['controlplane'][0]].k8_cluster_join_node,
            hostvars[groups['controlplane'][0]].k8_cluster_certificate
          ) }}

        creates: /etc/kubernetes/admin.conf

    - name: Create ~/.kube directory
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        mode: "0755"

    - name: Copy kubeconfig file
      ansible.builtin.file:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0755"
        state: hard
